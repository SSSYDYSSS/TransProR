% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/CircosFruits.R
\name{add_new_tile_layer}
\alias{add_new_tile_layer}
\title{Add a new tile layer with dynamic scales to a ggtree plot}
\usage{
add_new_tile_layer(
  p,
  data,
  gene_colors,
  gene_label,
  alpha_value = c(0.3, 0.9),
  offset = 0.02,
  pwidth = 2
)
}
\arguments{
\item{p}{An existing ggtree plot object.}

\item{data}{A data frame containing the data to be plotted. Expected to have columns for 'Sample', 'Gene', and 'value'.}

\item{gene_colors}{A named vector of colors for genes.}

\item{gene_label}{A character string used as a label in the legend for the genes.}

\item{alpha_value}{A numeric or named vector for setting the alpha scale based on values.}

\item{offset}{Numeric value, the position of the tile on the x-axis relative to its gene name. Default is 0.02.}

\item{pwidth}{Numeric value, the width of the tile. Default is 2.}
}
\value{
A ggtree plot object with the added tile layer and new scales.
}
\description{
This function adds a new tile layer to an existing ggtree plot object, allowing for separate scales for fill
and alpha transparency. This is useful when you want to add additional data layers without interfering with
the existing scales in the plot. It utilizes the ggnewscale package to reset scales for new layers.
}
\examples{
\dontrun{
# Assuming 'p' is an already created ggtree plot and 'data' is a dataframe
# containing columns 'Sample', 'Gene', and 'value'
gene_colors <- c("gene1" = "#491588", "gene2" = "#301b8d")
p <- add_new_tile_layer(p, data, gene_colors, "Gene Label", c(0.3, 0.9))
print(p)
}
}
